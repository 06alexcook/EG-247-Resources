%% Filter Design
function Hd = testfda
%TESTFDA Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 8.2 and the DSP System Toolbox 8.5.
% Generated on: 24-Mar-2014 16:25:46

% Butterworth Lowpass filter designed using FDESIGN.LOWPASS.

% All frequency values are in Hz.
Fs = 741586;  % Sampling Frequency

Fpass = 74158;       % Passband Frequency
Fstop = 148317;      % Stopband Frequency
Apass = 3;           % Passband Ripple (dB)
Astop = 60;          % Stopband Attenuation (dB)
match = 'stopband';  % Band to match exactly

% Construct an FDESIGN object and call its BUTTER method.
h  = fdesign.lowpass(Fpass, Fstop, Apass, Astop, Fs);
Hd = design(h, 'butter', 'MatchExactly', match);

%% Basic parameters
% Change this code to generate a sinewane in pass-band, cutof frequency
% and stop band
%
% Note we are doing this in advance of presenting sampling theory!
fs = sampling frequency;
Ts = 1/fs;   % sampling time
% sampling frequency in Hz
ws = 2*pi*fs; % sampling frequency in rad/s
%% Signal
% generate the noisy signal which will be filtered
f0 = Fpass;
t0 = 1/f0; % Hz
t = 0:Ts:10*t0; 
x = cos(2*pi*f0*t)
x(end) = []; % removes last element
x_filtered = filter(Hd,x);
%%
%plot the filtered signal
plot(x_filtered,'r')
title('Filtered Signal')
xlabel('Samples');
ylabel('Amplitude')
